name: Build Hello Theme
description: Build Hello Theme with specified version

inputs:
  PACKAGE_VERSION:
    description: 'The package version to build (e.g. 3.4.4)'
    required: true
  BUILD_SCRIPT_PATH:
    description: 'Path to build script'
    required: false
    default: "npm run build:prod"

runs:
  using: "composite"
  steps:
    - name: Install npm dependencies
      shell: bash
      run: |
        export PUPPETEER_SKIP_DOWNLOAD=true
        export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
        
        # Retry npm ci up to 3 times to handle transient registry issues (E429, network errors)
        for i in {1..3}; do
          echo "🔄 Attempt $i/3: Installing npm dependencies..."
          if npm ci --prefer-offline --no-audit --no-fund --silent; then
            echo "✅ npm ci succeeded on attempt $i"
            break
          else
            echo "❌ npm ci failed on attempt $i"
            if [ $i -eq 3 ]; then
              echo "⚠️ npm ci failed all attempts, falling back to npm install"
              npm install --legacy-peer-deps --no-audit --no-fund
              if [ $? -eq 0 ]; then
                echo "✅ npm install fallback succeeded"
              else
                echo "💥 Both npm ci and npm install failed"
                exit 1
              fi
            else
              echo "⏳ Waiting 30 seconds before retry..."
              sleep 30
            fi
          fi
        done

    - name: Install composer dependencies
      shell: bash
      run: |
        composer install --no-dev --no-scripts --optimize-autoloader --quiet

    - name: Set package version
      shell: bash
      env:
        PACKAGE_VERSION: ${{ inputs.PACKAGE_VERSION }}
      run: |
        echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
        echo "Building Hello Theme version: ${PACKAGE_VERSION}"

    - name: Build Hello Theme
      shell: bash
      run: |
        if [[ "${{ inputs.BUILD_SCRIPT_PATH }}" == npm* ]]; then
          ${{ inputs.BUILD_SCRIPT_PATH }}
        else
          bash "${{ inputs.BUILD_SCRIPT_PATH }}"
        fi

    - name: Create theme build directory
      shell: bash
      run: |
        mkdir -p /tmp/hello-theme-builds
        
    - name: Package Hello Theme
      shell: bash
      env:
        PACKAGE_VERSION: ${{ inputs.PACKAGE_VERSION }}
      run: |
        # Create zip file with proper naming (following Hello Commerce pattern)
        zip -r "/tmp/hello-theme-builds/hello-elementor-${PACKAGE_VERSION}.zip" . \
          -x "node_modules/*" "test-results/*" "tests/*" ".git/*" "*.zip" \
             "playwright-report/*" ".wp-env.json.*" ".wp-env" "vendor/*"

    - name: Move build to workspace
      shell: bash
      env:
        PACKAGE_VERSION: ${{ inputs.PACKAGE_VERSION }}
      run: |
        mv "/tmp/hello-theme-builds/hello-elementor-${PACKAGE_VERSION}.zip" \
           "./hello-elementor-${PACKAGE_VERSION}.zip"
        
        echo "✅ Hello Theme build completed: hello-elementor-${PACKAGE_VERSION}.zip"
        ls -la hello-elementor-*.zip
